<?php

/**
 * Tests for Patch Manager module.
 */
class PatchManagerWebTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Patch Manager tests',
      'description' => 'Tests for Patch Manager interface.',
      'group' => 'Patch Manager',
    );
  }

  public function setUp() {
    parent::setUp(array('patch_manager', 'patch_manager_features'));
  }

  public function testEntityMonkeyPatch() {
    $method_name = $this->randomName();
    $module_name = $this->randomName();
    // Define a function, that is intended to be overridden.
    $function_name = "{$module_name}_{$method_name}";
    // Create an entity of Method entity type.
    $method = entity_create('patch_manager_metaobject', array(
      'label' => $method_name,
      'name' => $method_name,
      'type' => 'method',
      'field_method_code' => 'return FALSE;',
    ));
    // Create an entity of Module entity type, having Method entity incorporated.
    $module = entity_create('patch_manager_metaobject', array(
      'label' => ($module_label = $this->randomString()),
      'name' => $module_name,
      'type' => 'module',
      'field_module_methods' => array($method),
    ));
    // Make sure that changed code is evaluated.
    $this->assertTrue(call_user_func($function_name), 'Evaluated overridden code');
  }
}